C51 COMPILER V9.60.0.0   NTC_TEMP_CALC                                                     06/14/2023 21:15:01 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE NTC_TEMP_CALC
OBJECT MODULE PLACED IN .\Objects\ntc_temp_calc.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE User\ntc_temp_calc.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\User;.\Drivers;.\STC
                    -8Ax_LIB\Core\Startup;.\STC8Ax_LIB\inc;.\STC8Ax_LIB\Core) DEBUG OBJECTEXTEND PRINT(.\Listings\ntc_temp_calc.lst) OBJECT(.
                    -\Objects\ntc_temp_calc.obj)

line level    source

   1          /*-------------------------------------------------------------------------------
   2          /*       (C) Copyright 2023, PSYM. All Rights Reserved
   3          /*-------------------------------------------------------------------------------
   4          /* File name   : ntc_temp_calc.c
   5          /* Description :
   6          /* Author      : PSYM
   7          /*-------------------------------------------------------------------------------
   8          /* Update note:
   9          /* -----------   -----------   --------------------------------------------------
  10          /*    Date         Author                              Note
  11          /* -----------   -----------   --------------------------------------------------
  12          /* 2023-06-14       PSYM
  13          /*   09:16
  14          **/
  15          
  16          /* ---------------------------------- 包含头文件 ---------------------------------- */
  17          #include "ntc_temp_calc.h"
  18          
  19          /* ---------------------------------- 私有宏定义 ---------------------------------- */
  20          #define T25 (25 + 273.15) // T25 = 25 + 273.15
  21          #define R25 (10)          // 25摄氏度下对应的NTC电阻值为10千欧，注意此处单位为千欧，因此传入的Rntc单位也要
             -一致为千欧
  22          #define RES_UP (5.0)     // 上拉采样电阻 RES_UP = 5.0K
  23          #define AVDD_MV (3300)    // AD电源电压 3300mv
  24          #define BX (3950)         // NTC 材料参数 B 值
  25          #define ABS_0 (273.15)    //
  26          
  27          /* ---------------------------------- 私有类型定义 ---------------------------------- */
  28          /* None. */
  29          
  30          /* ---------------------------------- 私有变量 ---------------------------------- */
  31          /* None. */
  32          
  33          /* ---------------------------------- 扩展变量 ---------------------------------- */
  34          /* None. */
  35          
  36          /* ---------------------------------- 私有函数原型 ---------------------------------- */
  37          /* None. */
  38          
  39          /* ---------------------------------- 函数体 ---------------------------------- */
  40          
  41          /**
  42           * @brief: 温度计算函数
  43           * @param: vdd_value为内部电压值
  44           *       TempADCValue为对应AD检测的电压值（在电路中采样电阻 R 的电压）
  45           * @return: 返回温度值
  46           * @note: 1.需要添加头文件"math.h"
  47           *        2.数学中ln是以e为底数(lne2=2)(ln为自然对数
  48           *         e=2.7182818284590452353602874713527…)
  49           *         math.h只有两个函数log和log10,其中log代表数学上的ln
  50           *         函数 log10(x) 以10为底的对数,即 lg(x),以其它数为底的对数用换底公式来表示
  51           *         此NTC温度计算公式只需要用到log这个函数即可。
  52           */
C51 COMPILER V9.60.0.0   NTC_TEMP_CALC                                                     06/14/2023 21:15:01 PAGE 2   

  53          int16 NTC_TempValue_Calculate(uint32 TempADCValue_mv)
  54          {
  55   1          float tmp = 0;
  56   1      
  57   1          /*
  58   1           必须要乘以1.0，才能得到浮点数0.51，否则得到的数值为0；
  59   1           因为：整型/整型=整型，而无法得到浮点型，即 51/100 = 0 ; 而51*1.0/100 = 0.51
  60   1          */
  61   1          tmp = (RES_UP * 1.0) / R25;                                // R/R0
  62   1          tmp = tmp * TempADCValue_mv / (AVDD_MV - TempADCValue_mv); //* V/(VDD-V)
  63   1          tmp = log(tmp);
  64   1          tmp /= BX;             // /B
  65   1          tmp *= T25;            // *(T0+273.15)
  66   1          tmp = T25 / (tmp + 1); // T
  67   1          tmp -= ABS_0;          // -273.15
  68   1          return tmp + 0.5;
  69   1      }
  70          
  71          /*>>>>>>>>>> (C) COPYRIGHT PSYM <<<<<< >>>>>> END OF FILE <<<<<<<<<<*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    231    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
