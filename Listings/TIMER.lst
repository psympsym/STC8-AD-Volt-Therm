C51 COMPILER V9.60.0.0   TIMER                                                             06/08/2023 18:52:44 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN .\Objects\TIMER.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE User\TIMER.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\User;.\Drivers;.\STC8Ax_LIB\
                    -Core\Startup;.\STC8Ax_LIB\inc;.\STC8Ax_LIB\Core) DEBUG OBJECTEXTEND PRINT(.\Listings\TIMER.lst) OBJECT(.\Objects\TIMER.o
                    -bj)

line level    source

   1          /*-------------------------------------------------------------------
   2          /*      (C) Copyright 2021-2022, nbufe. All Rights Reserved 
   3          /*-------------------------------------------------------------------
   4          /* File name   : TIMER.c
   5          /* Description : 
   6          /* Author      : nbufe
   7          /*-------------------------------------------------------------------
   8          /* Update note:
   9          /* ---------   -----------   ----------------------------------------
  10          /*   Date        Author                       Note
  11          /* ---------   -----------   ----------------------------------------
  12          /*  
  13          /*
  14          **/
  15          
  16          /* 包含头文件 -------------------------------------------------------*/
  17          #include "timer.h"
  18          #include "STC8Ax_CONF.h"
  19          
  20          /* 私有类型定义 -----------------------------------------------------*/
  21          /* None. */
  22          
  23          /* 私有宏定义 -------------------------------------------------------*/
  24          /* None. */
  25          
  26          /* 私有变量 ---------------------------------------------------------*/
  27          /* None. */
  28          
  29          /* 扩展变量 ---------------------------------------------------------*/
  30          /* None. */
  31          
  32          /* 私有函数原形 -----------------------------------------------------*/
  33          /* None. */
  34          
  35          /* 函数体 -----------------------------------------------------------*/
  36          
  37          /*
  38           * 功能: 定时器T0初始化为1ms产生中断 @35MHz
  39           * 参数: None
  40           * 返回: None
  41           * 说明: 
  42           */
  43          void Timer0Init(void)           
  44          {
  45   1              AUXR |= 0x80;           //定时器时钟1T模式
  46   1              TMOD &= 0xF0;           //设置定时器模式
  47   1              TL0 = 0x48;             //设置定时初值 65536-35*1000
  48   1              TH0 = 0x77;             //设置定时初值
  49   1              TF0 = 0;                //清除TF0标志
  50   1              TR0 = 1;                //定时器0开始计时
  51   1              ET0 = 1;    //允许定时器T0溢出中断
  52   1              EA = 1;     // 打开总中断
  53   1      }
C51 COMPILER V9.60.0.0   TIMER                                                             06/08/2023 18:52:44 PAGE 2   

  54          
  55          
  56          /*
  57           * 功能: 定时器T1初始化为1ms产生中断 @35MHz
  58           * 参数: None
  59           * 返回: None
  60           * 说明: 
  61           */
  62          void Timer1Init(void)           
  63          {
  64   1              AUXR |= 0x40;           //定时器T1时钟1T模式
  65   1              TMOD &= 0x0F;           //设置定时器模式0
  66   1              TL1 = 0x48;             //设置定时初值 65536-35MHz*1000
  67   1              TH1 = 0x77;             //设置定时初值
  68   1              TF1 = 0;                //清除TF1标志
  69   1              TR1 = 1;                //定时器1开始计时
  70   1              ET1 = 1;    //允许定时器T1溢出中断
  71   1              EA = 1;     // 打开总中断
  72   1      }
  73          
  74          
  75          /*
  76           * 功能: 定时器周期中断
  77           * 参数: tim_n 定时器通道
  78           *       tim_clk 使用1T/12T模式
  79           *       xms   定时器周期(ms)
  80           * 返回: 定时器初值(uint16)
  81           * 说明: 
  82           */
  83          uint16_t Timer_Init(uint8_t tim_n, uint8_t tim_clk, uint16_t xms)
  84          {
  85   1          unsigned long tmp;
  86   1              
  87   1                      if(tim_n > TIM4 || tim_clk > TIM_CLOCK_12T)     return 0;               //空操作
  88   1                      
  89   1                      /* 定时器初值计算 */
  90   1                      if(tim_clk == TIM_CLOCK_12T)    tmp = 65536 - (CONF_FOSC / (12 * (1000 / xms)));
  91   1                      if(TIM_CLOCK_1T == tim_clk)     tmp = 65536 - (CONF_FOSC / (1000 / xms));
  92   1                              
  93   1          if(TIM0 == tim_n)
  94   1          {
  95   2              TMOD &= 0xF0;   // 模式 0
  96   2              if(tim_clk == TIM_CLOCK_12T)    AUXR &= ~0x80;  //12T
  97   2              if(tim_clk == TIM_CLOCK_1T)             AUXR |=  0x80;  //1T
  98   2              TL0 = tmp;
  99   2              TH0 = tmp >> 8;
 100   2                                      TF0 = 0;        //清除TF0标志
 101   2              ET0 = 1;                                // 使能定时器中断
 102   2              TR0 = 1;                                // 启动定时器
 103   2          }
 104   1          else if(TIM1 == tim_n)
 105   1          {
 106   2              TMOD &= 0x0F;   // 模式 0
 107   2              if(tim_clk == TIM_CLOCK_12T)    AUXR &= ~0x40;  //12T
 108   2              if(tim_clk == TIM_CLOCK_1T)             AUXR |=  0x40;  //1T
 109   2              TL1 = tmp;
 110   2              TH1 = tmp >> 8;
 111   2                                      TF1 = 0;        //清除TF0标志
 112   2              ET1 = 1;                                // 使能定时器中断
 113   2              TR1 = 1;                                // 启动定时器
 114   2          }
 115   1          else if(TIM2 == tim_n)
C51 COMPILER V9.60.0.0   TIMER                                                             06/08/2023 18:52:44 PAGE 3   

 116   1          {
 117   2                                      if(tim_clk == TIM_CLOCK_12T)    AUXR &= ~(1 << 2);      //12T
 118   2              if(tim_clk == TIM_CLOCK_1T)             AUXR |=  (1 << 2);      //1T
 119   2                                      T2L = tmp;
 120   2              T2H = tmp >> 8;
 121   2              AUXR |= 0x10;   // 启动定时器
 122   2              IE2 |= 0x04;            // 使能定时器中断
 123   2          }
 124   1          else if(TIM3 == tim_n)
 125   1          {
 126   2                                      if(tim_clk == TIM_CLOCK_12T)    T4T3M &= ~(1 << 1);     //12T
 127   2              if(tim_clk == TIM_CLOCK_1T)             T4T3M |=  (1 << 1);     //1T
 128   2              T3L = tmp;
 129   2              T3H = tmp >> 8;
 130   2              T4T3M |= 0x08;  // 启动定时器
 131   2              IE2 |= 0x20;            // 使能定时器中断
 132   2          }
 133   1          else if(TIM4 == tim_n)
 134   1          {
 135   2                                      if(tim_clk == TIM_CLOCK_12T)    T4T3M &= ~(1 << 5);             //12T
 136   2              if(tim_clk == TIM_CLOCK_1T)             T4T3M |=  (1 << 5);             //1T
 137   2              T4L = tmp;
 138   2              T4H = tmp >> 8;
 139   2              T4T3M |= 0x80;  // 启动定时器
 140   2              IE2 |= 0x40;            // 使能定时器中断
 141   2          }
 142   1                      
 143   1                      return (uint16_t)tmp;
 144   1      }
 145          
 146          
 147          /*>>>>>>>>>> (C) COPYRIGHT NBUFE <<<<<< >>>>>> END OF FILE <<<<<<<<<<*/
 148          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    461    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
